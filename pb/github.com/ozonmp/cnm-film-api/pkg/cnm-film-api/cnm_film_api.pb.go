// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: ozonmp/cnm_film_api/v1/cnm_film_api.proto

package cnm_film_api

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Film struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rating           float64                `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
	ShortDescription string                 `protobuf:"bytes,4,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	Created          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *Film) Reset() {
	*x = Film{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Film) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Film) ProtoMessage() {}

func (x *Film) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Film.ProtoReflect.Descriptor instead.
func (*Film) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{0}
}

func (x *Film) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Film) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Film) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Film) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Film) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

type ReqFilm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rating           float64 `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
	ShortDescription string  `protobuf:"bytes,4,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
}

func (x *ReqFilm) Reset() {
	*x = ReqFilm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFilm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFilm) ProtoMessage() {}

func (x *ReqFilm) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFilm.ProtoReflect.Descriptor instead.
func (*ReqFilm) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{1}
}

func (x *ReqFilm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqFilm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqFilm) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ReqFilm) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

type DescribeFilmV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmId int64 `protobuf:"varint,1,opt,name=film_id,json=filmId,proto3" json:"film_id,omitempty"`
}

func (x *DescribeFilmV1Request) Reset() {
	*x = DescribeFilmV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFilmV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFilmV1Request) ProtoMessage() {}

func (x *DescribeFilmV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFilmV1Request.ProtoReflect.Descriptor instead.
func (*DescribeFilmV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeFilmV1Request) GetFilmId() int64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

type DescribeFilmV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *Film `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
}

func (x *DescribeFilmV1Response) Reset() {
	*x = DescribeFilmV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFilmV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFilmV1Response) ProtoMessage() {}

func (x *DescribeFilmV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFilmV1Response.ProtoReflect.Descriptor instead.
func (*DescribeFilmV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeFilmV1Response) GetFilm() *Film {
	if x != nil {
		return x.Film
	}
	return nil
}

type CreateFilmV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rating           float64 `protobuf:"fixed64,2,opt,name=rating,proto3" json:"rating,omitempty"`
	ShortDescription string  `protobuf:"bytes,3,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
}

func (x *CreateFilmV1Request) Reset() {
	*x = CreateFilmV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFilmV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFilmV1Request) ProtoMessage() {}

func (x *CreateFilmV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFilmV1Request.ProtoReflect.Descriptor instead.
func (*CreateFilmV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFilmV1Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFilmV1Request) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CreateFilmV1Request) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

type CreateFilmV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *Film `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
}

func (x *CreateFilmV1Response) Reset() {
	*x = CreateFilmV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFilmV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFilmV1Response) ProtoMessage() {}

func (x *CreateFilmV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFilmV1Response.ProtoReflect.Descriptor instead.
func (*CreateFilmV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFilmV1Response) GetFilm() *Film {
	if x != nil {
		return x.Film
	}
	return nil
}

type ListFilmV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor int64 `protobuf:"varint,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListFilmV1Request) Reset() {
	*x = ListFilmV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilmV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilmV1Request) ProtoMessage() {}

func (x *ListFilmV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilmV1Request.ProtoReflect.Descriptor instead.
func (*ListFilmV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListFilmV1Request) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListFilmV1Request) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListFilmV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film []*Film `protobuf:"bytes,1,rep,name=film,proto3" json:"film,omitempty"`
}

func (x *ListFilmV1Response) Reset() {
	*x = ListFilmV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilmV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilmV1Response) ProtoMessage() {}

func (x *ListFilmV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilmV1Response.ProtoReflect.Descriptor instead.
func (*ListFilmV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{7}
}

func (x *ListFilmV1Response) GetFilm() []*Film {
	if x != nil {
		return x.Film
	}
	return nil
}

type RemoveFilmV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmId int64 `protobuf:"varint,1,opt,name=film_id,json=filmId,proto3" json:"film_id,omitempty"`
}

func (x *RemoveFilmV1Request) Reset() {
	*x = RemoveFilmV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFilmV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFilmV1Request) ProtoMessage() {}

func (x *RemoveFilmV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFilmV1Request.ProtoReflect.Descriptor instead.
func (*RemoveFilmV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveFilmV1Request) GetFilmId() int64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

type RemoveFilmV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *Film `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
}

func (x *RemoveFilmV1Response) Reset() {
	*x = RemoveFilmV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFilmV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFilmV1Response) ProtoMessage() {}

func (x *RemoveFilmV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFilmV1Response.ProtoReflect.Descriptor instead.
func (*RemoveFilmV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveFilmV1Response) GetFilm() *Film {
	if x != nil {
		return x.Film
	}
	return nil
}

type UpdateFilmV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *ReqFilm `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
}

func (x *UpdateFilmV1Request) Reset() {
	*x = UpdateFilmV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFilmV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFilmV1Request) ProtoMessage() {}

func (x *UpdateFilmV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFilmV1Request.ProtoReflect.Descriptor instead.
func (*UpdateFilmV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateFilmV1Request) GetFilm() *ReqFilm {
	if x != nil {
		return x.Film
	}
	return nil
}

type UpdateFilmV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *Film `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
}

func (x *UpdateFilmV1Response) Reset() {
	*x = UpdateFilmV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFilmV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFilmV1Response) ProtoMessage() {}

func (x *UpdateFilmV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFilmV1Response.ProtoReflect.Descriptor instead.
func (*UpdateFilmV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateFilmV1Response) GetFilm() *Film {
	if x != nil {
		return x.Film
	}
	return nil
}

type FilmEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FilmId  int64                  `protobuf:"varint,2,opt,name=film_id,json=filmId,proto3" json:"film_id,omitempty"`
	Type    string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Status  string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Updated *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *FilmEvent) Reset() {
	*x = FilmEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmEvent) ProtoMessage() {}

func (x *FilmEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmEvent.ProtoReflect.Descriptor instead.
func (*FilmEvent) Descriptor() ([]byte, []int) {
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP(), []int{12}
}

func (x *FilmEvent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FilmEvent) GetFilmId() int64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

func (x *FilmEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FilmEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FilmEvent) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

var File_ozonmp_cnm_film_api_v1_cnm_film_api_proto protoreflect.FileDescriptor

var file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2f, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c,
	0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c,
	0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6f, 0x7a, 0x6f,
	0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x04,
	0x46, 0x69, 0x6c, 0x6d, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x28, 0x80, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x42, 0x17, 0xfa,
	0x42, 0x14, 0x12, 0x12, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x40, 0x29, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x35,
	0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x28, 0x80, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x28, 0x80, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2f, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x42, 0x17, 0xfa, 0x42, 0x14, 0x12, 0x12, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x40,
	0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x35, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x28, 0x80, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x6d, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46,
	0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x7a,
	0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22,
	0x9d, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x28, 0x80,
	0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x12, 0x12, 0x19, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x28, 0x80, 0x08, 0x52, 0x10, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x48, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63,
	0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22, 0x53, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x46,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f,
	0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x6d,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22, 0x37, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x22,
	0x48, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63,
	0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22, 0x4a, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6c, 0x6d, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x7a,
	0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22,
	0xa8, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x28, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x32, 0xca, 0x05, 0x0a, 0x11, 0x43,
	0x6e, 0x6d, 0x46, 0x69, 0x6c, 0x6d, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c,
	0x6d, 0x56, 0x31, 0x12, 0x2d, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d,
	0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f,
	0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x69, 0x6c, 0x6d, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x3a,
	0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x6d, 0x56, 0x31, 0x12, 0x2b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d,
	0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69,
	0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x6d,
	0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x7e, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x12, 0x29, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e,
	0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e,
	0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69,
	0x6c, 0x6d, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x12, 0x2b, 0x2e, 0x6f,
	0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e,
	0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22,
	0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x86,
	0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x56, 0x31, 0x12,
	0x2b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c,
	0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x6d, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f,
	0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x63, 0x6e, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2f, 0x63, 0x6e, 0x6d,
	0x2d, 0x66, 0x69, 0x6c, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6e,
	0x6d, 0x2d, 0x66, 0x69, 0x6c, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x3b, 0x63, 0x6e, 0x6d, 0x5f, 0x66,
	0x69, 0x6c, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescOnce sync.Once
	file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescData = file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDesc
)

func file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescGZIP() []byte {
	file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescOnce.Do(func() {
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescData)
	})
	return file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDescData
}

var file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_goTypes = []interface{}{
	(*Film)(nil),                   // 0: ozonmp.cnm_film_api.v1.Film
	(*ReqFilm)(nil),                // 1: ozonmp.cnm_film_api.v1.ReqFilm
	(*DescribeFilmV1Request)(nil),  // 2: ozonmp.cnm_film_api.v1.DescribeFilmV1Request
	(*DescribeFilmV1Response)(nil), // 3: ozonmp.cnm_film_api.v1.DescribeFilmV1Response
	(*CreateFilmV1Request)(nil),    // 4: ozonmp.cnm_film_api.v1.CreateFilmV1Request
	(*CreateFilmV1Response)(nil),   // 5: ozonmp.cnm_film_api.v1.CreateFilmV1Response
	(*ListFilmV1Request)(nil),      // 6: ozonmp.cnm_film_api.v1.ListFilmV1Request
	(*ListFilmV1Response)(nil),     // 7: ozonmp.cnm_film_api.v1.ListFilmV1Response
	(*RemoveFilmV1Request)(nil),    // 8: ozonmp.cnm_film_api.v1.RemoveFilmV1Request
	(*RemoveFilmV1Response)(nil),   // 9: ozonmp.cnm_film_api.v1.RemoveFilmV1Response
	(*UpdateFilmV1Request)(nil),    // 10: ozonmp.cnm_film_api.v1.UpdateFilmV1Request
	(*UpdateFilmV1Response)(nil),   // 11: ozonmp.cnm_film_api.v1.UpdateFilmV1Response
	(*FilmEvent)(nil),              // 12: ozonmp.cnm_film_api.v1.FilmEvent
	(*timestamppb.Timestamp)(nil),  // 13: google.protobuf.Timestamp
}
var file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_depIdxs = []int32{
	13, // 0: ozonmp.cnm_film_api.v1.Film.created:type_name -> google.protobuf.Timestamp
	0,  // 1: ozonmp.cnm_film_api.v1.DescribeFilmV1Response.film:type_name -> ozonmp.cnm_film_api.v1.Film
	0,  // 2: ozonmp.cnm_film_api.v1.CreateFilmV1Response.film:type_name -> ozonmp.cnm_film_api.v1.Film
	0,  // 3: ozonmp.cnm_film_api.v1.ListFilmV1Response.film:type_name -> ozonmp.cnm_film_api.v1.Film
	0,  // 4: ozonmp.cnm_film_api.v1.RemoveFilmV1Response.film:type_name -> ozonmp.cnm_film_api.v1.Film
	1,  // 5: ozonmp.cnm_film_api.v1.UpdateFilmV1Request.film:type_name -> ozonmp.cnm_film_api.v1.ReqFilm
	0,  // 6: ozonmp.cnm_film_api.v1.UpdateFilmV1Response.film:type_name -> ozonmp.cnm_film_api.v1.Film
	13, // 7: ozonmp.cnm_film_api.v1.FilmEvent.updated:type_name -> google.protobuf.Timestamp
	2,  // 8: ozonmp.cnm_film_api.v1.CnmFilmApiService.DescribeFilmV1:input_type -> ozonmp.cnm_film_api.v1.DescribeFilmV1Request
	4,  // 9: ozonmp.cnm_film_api.v1.CnmFilmApiService.CreateFilmV1:input_type -> ozonmp.cnm_film_api.v1.CreateFilmV1Request
	6,  // 10: ozonmp.cnm_film_api.v1.CnmFilmApiService.ListFilmV1:input_type -> ozonmp.cnm_film_api.v1.ListFilmV1Request
	8,  // 11: ozonmp.cnm_film_api.v1.CnmFilmApiService.RemoveFilmV1:input_type -> ozonmp.cnm_film_api.v1.RemoveFilmV1Request
	10, // 12: ozonmp.cnm_film_api.v1.CnmFilmApiService.UpdateFilmV1:input_type -> ozonmp.cnm_film_api.v1.UpdateFilmV1Request
	3,  // 13: ozonmp.cnm_film_api.v1.CnmFilmApiService.DescribeFilmV1:output_type -> ozonmp.cnm_film_api.v1.DescribeFilmV1Response
	5,  // 14: ozonmp.cnm_film_api.v1.CnmFilmApiService.CreateFilmV1:output_type -> ozonmp.cnm_film_api.v1.CreateFilmV1Response
	7,  // 15: ozonmp.cnm_film_api.v1.CnmFilmApiService.ListFilmV1:output_type -> ozonmp.cnm_film_api.v1.ListFilmV1Response
	9,  // 16: ozonmp.cnm_film_api.v1.CnmFilmApiService.RemoveFilmV1:output_type -> ozonmp.cnm_film_api.v1.RemoveFilmV1Response
	11, // 17: ozonmp.cnm_film_api.v1.CnmFilmApiService.UpdateFilmV1:output_type -> ozonmp.cnm_film_api.v1.UpdateFilmV1Response
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_init() }
func file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_init() {
	if File_ozonmp_cnm_film_api_v1_cnm_film_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Film); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFilm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFilmV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFilmV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFilmV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFilmV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilmV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilmV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFilmV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFilmV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFilmV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFilmV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_goTypes,
		DependencyIndexes: file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_depIdxs,
		MessageInfos:      file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_msgTypes,
	}.Build()
	File_ozonmp_cnm_film_api_v1_cnm_film_api_proto = out.File
	file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_rawDesc = nil
	file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_goTypes = nil
	file_ozonmp_cnm_film_api_v1_cnm_film_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CnmFilmApiServiceClient is the client API for CnmFilmApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CnmFilmApiServiceClient interface {
	// DescribeFilmV1 - Describe a film
	DescribeFilmV1(ctx context.Context, in *DescribeFilmV1Request, opts ...grpc.CallOption) (*DescribeFilmV1Response, error)
	CreateFilmV1(ctx context.Context, in *CreateFilmV1Request, opts ...grpc.CallOption) (*CreateFilmV1Response, error)
	ListFilmV1(ctx context.Context, in *ListFilmV1Request, opts ...grpc.CallOption) (*ListFilmV1Response, error)
	RemoveFilmV1(ctx context.Context, in *RemoveFilmV1Request, opts ...grpc.CallOption) (*RemoveFilmV1Response, error)
	UpdateFilmV1(ctx context.Context, in *UpdateFilmV1Request, opts ...grpc.CallOption) (*UpdateFilmV1Response, error)
}

type cnmFilmApiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCnmFilmApiServiceClient(cc grpc.ClientConnInterface) CnmFilmApiServiceClient {
	return &cnmFilmApiServiceClient{cc}
}

func (c *cnmFilmApiServiceClient) DescribeFilmV1(ctx context.Context, in *DescribeFilmV1Request, opts ...grpc.CallOption) (*DescribeFilmV1Response, error) {
	out := new(DescribeFilmV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.cnm_film_api.v1.CnmFilmApiService/DescribeFilmV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cnmFilmApiServiceClient) CreateFilmV1(ctx context.Context, in *CreateFilmV1Request, opts ...grpc.CallOption) (*CreateFilmV1Response, error) {
	out := new(CreateFilmV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.cnm_film_api.v1.CnmFilmApiService/CreateFilmV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cnmFilmApiServiceClient) ListFilmV1(ctx context.Context, in *ListFilmV1Request, opts ...grpc.CallOption) (*ListFilmV1Response, error) {
	out := new(ListFilmV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.cnm_film_api.v1.CnmFilmApiService/ListFilmV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cnmFilmApiServiceClient) RemoveFilmV1(ctx context.Context, in *RemoveFilmV1Request, opts ...grpc.CallOption) (*RemoveFilmV1Response, error) {
	out := new(RemoveFilmV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.cnm_film_api.v1.CnmFilmApiService/RemoveFilmV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cnmFilmApiServiceClient) UpdateFilmV1(ctx context.Context, in *UpdateFilmV1Request, opts ...grpc.CallOption) (*UpdateFilmV1Response, error) {
	out := new(UpdateFilmV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.cnm_film_api.v1.CnmFilmApiService/UpdateFilmV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CnmFilmApiServiceServer is the server API for CnmFilmApiService service.
type CnmFilmApiServiceServer interface {
	// DescribeFilmV1 - Describe a film
	DescribeFilmV1(context.Context, *DescribeFilmV1Request) (*DescribeFilmV1Response, error)
	CreateFilmV1(context.Context, *CreateFilmV1Request) (*CreateFilmV1Response, error)
	ListFilmV1(context.Context, *ListFilmV1Request) (*ListFilmV1Response, error)
	RemoveFilmV1(context.Context, *RemoveFilmV1Request) (*RemoveFilmV1Response, error)
	UpdateFilmV1(context.Context, *UpdateFilmV1Request) (*UpdateFilmV1Response, error)
}

// UnimplementedCnmFilmApiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCnmFilmApiServiceServer struct {
}

func (*UnimplementedCnmFilmApiServiceServer) DescribeFilmV1(context.Context, *DescribeFilmV1Request) (*DescribeFilmV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeFilmV1 not implemented")
}
func (*UnimplementedCnmFilmApiServiceServer) CreateFilmV1(context.Context, *CreateFilmV1Request) (*CreateFilmV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFilmV1 not implemented")
}
func (*UnimplementedCnmFilmApiServiceServer) ListFilmV1(context.Context, *ListFilmV1Request) (*ListFilmV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFilmV1 not implemented")
}
func (*UnimplementedCnmFilmApiServiceServer) RemoveFilmV1(context.Context, *RemoveFilmV1Request) (*RemoveFilmV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFilmV1 not implemented")
}
func (*UnimplementedCnmFilmApiServiceServer) UpdateFilmV1(context.Context, *UpdateFilmV1Request) (*UpdateFilmV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFilmV1 not implemented")
}

func RegisterCnmFilmApiServiceServer(s *grpc.Server, srv CnmFilmApiServiceServer) {
	s.RegisterService(&_CnmFilmApiService_serviceDesc, srv)
}

func _CnmFilmApiService_DescribeFilmV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeFilmV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CnmFilmApiServiceServer).DescribeFilmV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.cnm_film_api.v1.CnmFilmApiService/DescribeFilmV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CnmFilmApiServiceServer).DescribeFilmV1(ctx, req.(*DescribeFilmV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CnmFilmApiService_CreateFilmV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFilmV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CnmFilmApiServiceServer).CreateFilmV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.cnm_film_api.v1.CnmFilmApiService/CreateFilmV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CnmFilmApiServiceServer).CreateFilmV1(ctx, req.(*CreateFilmV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CnmFilmApiService_ListFilmV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFilmV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CnmFilmApiServiceServer).ListFilmV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.cnm_film_api.v1.CnmFilmApiService/ListFilmV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CnmFilmApiServiceServer).ListFilmV1(ctx, req.(*ListFilmV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CnmFilmApiService_RemoveFilmV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFilmV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CnmFilmApiServiceServer).RemoveFilmV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.cnm_film_api.v1.CnmFilmApiService/RemoveFilmV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CnmFilmApiServiceServer).RemoveFilmV1(ctx, req.(*RemoveFilmV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CnmFilmApiService_UpdateFilmV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFilmV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CnmFilmApiServiceServer).UpdateFilmV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.cnm_film_api.v1.CnmFilmApiService/UpdateFilmV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CnmFilmApiServiceServer).UpdateFilmV1(ctx, req.(*UpdateFilmV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _CnmFilmApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ozonmp.cnm_film_api.v1.CnmFilmApiService",
	HandlerType: (*CnmFilmApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DescribeFilmV1",
			Handler:    _CnmFilmApiService_DescribeFilmV1_Handler,
		},
		{
			MethodName: "CreateFilmV1",
			Handler:    _CnmFilmApiService_CreateFilmV1_Handler,
		},
		{
			MethodName: "ListFilmV1",
			Handler:    _CnmFilmApiService_ListFilmV1_Handler,
		},
		{
			MethodName: "RemoveFilmV1",
			Handler:    _CnmFilmApiService_RemoveFilmV1_Handler,
		},
		{
			MethodName: "UpdateFilmV1",
			Handler:    _CnmFilmApiService_UpdateFilmV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ozonmp/cnm_film_api/v1/cnm_film_api.proto",
}
